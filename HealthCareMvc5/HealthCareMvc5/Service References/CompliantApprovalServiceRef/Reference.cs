//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HealthCareMvc5.CompliantApprovalServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IssueClearance", Namespace="http://schemas.datacontract.org/2004/07/HealthCareObjects.Client")]
    [System.SerializableAttribute()]
    public partial class IssueClearance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ActiveflageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AssignToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AssignedIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BranchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientIssueNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClientNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ClosedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CommentsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompliantDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CompliantNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompltIssueNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ContactNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DailyUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeatureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileUploadflagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FormIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromtimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsIssueNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IssueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IssueDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IssueFromIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IssueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueSubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ModuleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OpenedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PriorityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SeverityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeverityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TaskDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TotalRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Username1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Activeflage {
            get {
                return this.ActiveflageField;
            }
            set {
                if ((this.ActiveflageField.Equals(value) != true)) {
                    this.ActiveflageField = value;
                    this.RaisePropertyChanged("Activeflage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AssignTo {
            get {
                return this.AssignToField;
            }
            set {
                if ((this.AssignToField.Equals(value) != true)) {
                    this.AssignToField = value;
                    this.RaisePropertyChanged("AssignTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedBy {
            get {
                return this.AssignedByField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedByField, value) != true)) {
                    this.AssignedByField = value;
                    this.RaisePropertyChanged("AssignedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AssignedID {
            get {
                return this.AssignedIDField;
            }
            set {
                if ((this.AssignedIDField.Equals(value) != true)) {
                    this.AssignedIDField = value;
                    this.RaisePropertyChanged("AssignedID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BranchID {
            get {
                return this.BranchIDField;
            }
            set {
                if ((this.BranchIDField.Equals(value) != true)) {
                    this.BranchIDField = value;
                    this.RaisePropertyChanged("BranchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientIssueNo {
            get {
                return this.ClientIssueNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIssueNoField, value) != true)) {
                    this.ClientIssueNoField = value;
                    this.RaisePropertyChanged("ClientIssueNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClientNameID {
            get {
                return this.ClientNameIDField;
            }
            set {
                if ((this.ClientNameIDField.Equals(value) != true)) {
                    this.ClientNameIDField = value;
                    this.RaisePropertyChanged("ClientNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ClosedDate {
            get {
                return this.ClosedDateField;
            }
            set {
                if ((this.ClosedDateField.Equals(value) != true)) {
                    this.ClosedDateField = value;
                    this.RaisePropertyChanged("ClosedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentsDate {
            get {
                return this.CommentsDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsDateField, value) != true)) {
                    this.CommentsDateField = value;
                    this.RaisePropertyChanged("CommentsDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CommentsID {
            get {
                return this.CommentsIDField;
            }
            set {
                if ((this.CommentsIDField.Equals(value) != true)) {
                    this.CommentsIDField = value;
                    this.RaisePropertyChanged("CommentsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompliantDescription {
            get {
                return this.CompliantDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CompliantDescriptionField, value) != true)) {
                    this.CompliantDescriptionField = value;
                    this.RaisePropertyChanged("CompliantDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CompliantNo {
            get {
                return this.CompliantNoField;
            }
            set {
                if ((this.CompliantNoField.Equals(value) != true)) {
                    this.CompliantNoField = value;
                    this.RaisePropertyChanged("CompliantNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompltIssueNo {
            get {
                return this.CompltIssueNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CompltIssueNoField, value) != true)) {
                    this.CompltIssueNoField = value;
                    this.RaisePropertyChanged("CompltIssueNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ContactNo {
            get {
                return this.ContactNoField;
            }
            set {
                if ((this.ContactNoField.Equals(value) != true)) {
                    this.ContactNoField = value;
                    this.RaisePropertyChanged("ContactNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DailyUpdate {
            get {
                return this.DailyUpdateField;
            }
            set {
                if ((object.ReferenceEquals(this.DailyUpdateField, value) != true)) {
                    this.DailyUpdateField = value;
                    this.RaisePropertyChanged("DailyUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((this.DepartmentIDField.Equals(value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeatureName {
            get {
                return this.FeatureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureNameField, value) != true)) {
                    this.FeatureNameField = value;
                    this.RaisePropertyChanged("FeatureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] File {
            get {
                return this.FileField;
            }
            set {
                if ((object.ReferenceEquals(this.FileField, value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileUploadflag {
            get {
                return this.FileUploadflagField;
            }
            set {
                if ((this.FileUploadflagField.Equals(value) != true)) {
                    this.FileUploadflagField = value;
                    this.RaisePropertyChanged("FileUploadflag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FormID {
            get {
                return this.FormIDField;
            }
            set {
                if ((this.FormIDField.Equals(value) != true)) {
                    this.FormIDField = value;
                    this.RaisePropertyChanged("FormID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormName {
            get {
                return this.FormNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormNameField, value) != true)) {
                    this.FormNameField = value;
                    this.RaisePropertyChanged("FormName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fromtime {
            get {
                return this.FromtimeField;
            }
            set {
                if ((object.ReferenceEquals(this.FromtimeField, value) != true)) {
                    this.FromtimeField = value;
                    this.RaisePropertyChanged("Fromtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsIssueNO {
            get {
                return this.IsIssueNOField;
            }
            set {
                if ((object.ReferenceEquals(this.IsIssueNOField, value) != true)) {
                    this.IsIssueNOField = value;
                    this.RaisePropertyChanged("IsIssueNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IssueDate {
            get {
                return this.IssueDateField;
            }
            set {
                if ((this.IssueDateField.Equals(value) != true)) {
                    this.IssueDateField = value;
                    this.RaisePropertyChanged("IssueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IssueDetailID {
            get {
                return this.IssueDetailIDField;
            }
            set {
                if ((this.IssueDetailIDField.Equals(value) != true)) {
                    this.IssueDetailIDField = value;
                    this.RaisePropertyChanged("IssueDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueFrom {
            get {
                return this.IssueFromField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueFromField, value) != true)) {
                    this.IssueFromField = value;
                    this.RaisePropertyChanged("IssueFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IssueFromId {
            get {
                return this.IssueFromIdField;
            }
            set {
                if ((this.IssueFromIdField.Equals(value) != true)) {
                    this.IssueFromIdField = value;
                    this.RaisePropertyChanged("IssueFromId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IssueID {
            get {
                return this.IssueIDField;
            }
            set {
                if ((this.IssueIDField.Equals(value) != true)) {
                    this.IssueIDField = value;
                    this.RaisePropertyChanged("IssueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueSubject {
            get {
                return this.IssueSubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueSubjectField, value) != true)) {
                    this.IssueSubjectField = value;
                    this.RaisePropertyChanged("IssueSubject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ModuleID {
            get {
                return this.ModuleIDField;
            }
            set {
                if ((this.ModuleIDField.Equals(value) != true)) {
                    this.ModuleIDField = value;
                    this.RaisePropertyChanged("ModuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OpenedDate {
            get {
                return this.OpenedDateField;
            }
            set {
                if ((this.OpenedDateField.Equals(value) != true)) {
                    this.OpenedDateField = value;
                    this.RaisePropertyChanged("OpenedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurDescription {
            get {
                return this.OurDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OurDescriptionField, value) != true)) {
                    this.OurDescriptionField = value;
                    this.RaisePropertyChanged("OurDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PriorityId {
            get {
                return this.PriorityIdField;
            }
            set {
                if ((this.PriorityIdField.Equals(value) != true)) {
                    this.PriorityIdField = value;
                    this.RaisePropertyChanged("PriorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriorityName {
            get {
                return this.PriorityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityNameField, value) != true)) {
                    this.PriorityNameField = value;
                    this.RaisePropertyChanged("PriorityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SNO {
            get {
                return this.SNOField;
            }
            set {
                if ((this.SNOField.Equals(value) != true)) {
                    this.SNOField = value;
                    this.RaisePropertyChanged("SNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SeverityId {
            get {
                return this.SeverityIdField;
            }
            set {
                if ((this.SeverityIdField.Equals(value) != true)) {
                    this.SeverityIdField = value;
                    this.RaisePropertyChanged("SeverityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeverityName {
            get {
                return this.SeverityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SeverityNameField, value) != true)) {
                    this.SeverityNameField = value;
                    this.RaisePropertyChanged("SeverityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TaskDetailID {
            get {
                return this.TaskDetailIDField;
            }
            set {
                if ((this.TaskDetailIDField.Equals(value) != true)) {
                    this.TaskDetailIDField = value;
                    this.RaisePropertyChanged("TaskDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToTime {
            get {
                return this.ToTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ToTimeField, value) != true)) {
                    this.ToTimeField = value;
                    this.RaisePropertyChanged("ToTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="Username")]
        public string Username1 {
            get {
                return this.Username1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Username1Field, value) != true)) {
                    this.Username1Field = value;
                    this.RaisePropertyChanged("Username1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.fileNameField, value) != true)) {
                    this.fileNameField = value;
                    this.RaisePropertyChanged("fileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompliantApproval", Namespace="http://schemas.datacontract.org/2004/07/HealthCareObjects.Client")]
    [System.SerializableAttribute()]
    public partial class CompliantApproval : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveflagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ApprovalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ApproveFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClientIssueNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompliantNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompliantRaisedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeatureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IssueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IssueDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IssueidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssuesubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoOfIssueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OverAllPriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SmcstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Activeflag {
            get {
                return this.ActiveflagField;
            }
            set {
                if ((this.ActiveflagField.Equals(value) != true)) {
                    this.ActiveflagField = value;
                    this.RaisePropertyChanged("Activeflag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ApprovalDate {
            get {
                return this.ApprovalDateField;
            }
            set {
                if ((this.ApprovalDateField.Equals(value) != true)) {
                    this.ApprovalDateField = value;
                    this.RaisePropertyChanged("ApprovalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ApproveFlag {
            get {
                return this.ApproveFlagField;
            }
            set {
                if ((this.ApproveFlagField.Equals(value) != true)) {
                    this.ApproveFlagField = value;
                    this.RaisePropertyChanged("ApproveFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClientIssueNo {
            get {
                return this.ClientIssueNoField;
            }
            set {
                if ((this.ClientIssueNoField.Equals(value) != true)) {
                    this.ClientIssueNoField = value;
                    this.RaisePropertyChanged("ClientIssueNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompliantNo {
            get {
                return this.CompliantNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CompliantNoField, value) != true)) {
                    this.CompliantNoField = value;
                    this.RaisePropertyChanged("CompliantNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompliantRaisedBy {
            get {
                return this.CompliantRaisedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CompliantRaisedByField, value) != true)) {
                    this.CompliantRaisedByField = value;
                    this.RaisePropertyChanged("CompliantRaisedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeatureName {
            get {
                return this.FeatureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureNameField, value) != true)) {
                    this.FeatureNameField = value;
                    this.RaisePropertyChanged("FeatureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormName {
            get {
                return this.FormNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormNameField, value) != true)) {
                    this.FormNameField = value;
                    this.RaisePropertyChanged("FormName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IssueDate {
            get {
                return this.IssueDateField;
            }
            set {
                if ((this.IssueDateField.Equals(value) != true)) {
                    this.IssueDateField = value;
                    this.RaisePropertyChanged("IssueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueDescription {
            get {
                return this.IssueDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueDescriptionField, value) != true)) {
                    this.IssueDescriptionField = value;
                    this.RaisePropertyChanged("IssueDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IssueDetailID {
            get {
                return this.IssueDetailIDField;
            }
            set {
                if ((this.IssueDetailIDField.Equals(value) != true)) {
                    this.IssueDetailIDField = value;
                    this.RaisePropertyChanged("IssueDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Issueid {
            get {
                return this.IssueidField;
            }
            set {
                if ((this.IssueidField.Equals(value) != true)) {
                    this.IssueidField = value;
                    this.RaisePropertyChanged("Issueid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Issuesubject {
            get {
                return this.IssuesubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuesubjectField, value) != true)) {
                    this.IssuesubjectField = value;
                    this.RaisePropertyChanged("Issuesubject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoOfIssue {
            get {
                return this.NoOfIssueField;
            }
            set {
                if ((this.NoOfIssueField.Equals(value) != true)) {
                    this.NoOfIssueField = value;
                    this.RaisePropertyChanged("NoOfIssue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OverAllPriority {
            get {
                return this.OverAllPriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.OverAllPriorityField, value) != true)) {
                    this.OverAllPriorityField = value;
                    this.RaisePropertyChanged("OverAllPriority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SNO {
            get {
                return this.SNOField;
            }
            set {
                if ((this.SNOField.Equals(value) != true)) {
                    this.SNOField = value;
                    this.RaisePropertyChanged("SNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Smcstatus {
            get {
                return this.SmcstatusField;
            }
            set {
                if ((this.SmcstatusField.Equals(value) != true)) {
                    this.SmcstatusField = value;
                    this.RaisePropertyChanged("Smcstatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CompliantApprovalServiceRef.ICompliantApprovalService")]
    public interface ICompliantApprovalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompliantApprovalService/CreateComments", ReplyAction="http://tempuri.org/ICompliantApprovalService/CreateCommentsResponse")]
        long CreateComments(HealthCareMvc5.CompliantApprovalServiceRef.IssueClearance objissue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompliantApprovalService/CreateComments", ReplyAction="http://tempuri.org/ICompliantApprovalService/CreateCommentsResponse")]
        System.Threading.Tasks.Task<long> CreateCommentsAsync(HealthCareMvc5.CompliantApprovalServiceRef.IssueClearance objissue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompliantApprovalService/UpdateCompliantApproval", ReplyAction="http://tempuri.org/ICompliantApprovalService/UpdateCompliantApprovalResponse")]
        bool UpdateCompliantApproval(HealthCareMvc5.CompliantApprovalServiceRef.CompliantApproval objCompliantNO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompliantApprovalService/UpdateCompliantApproval", ReplyAction="http://tempuri.org/ICompliantApprovalService/UpdateCompliantApprovalResponse")]
        System.Threading.Tasks.Task<bool> UpdateCompliantApprovalAsync(HealthCareMvc5.CompliantApprovalServiceRef.CompliantApproval objCompliantNO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompliantApprovalService/ListUpdate", ReplyAction="http://tempuri.org/ICompliantApprovalService/ListUpdateResponse")]
        bool ListUpdate(System.Collections.Generic.List<HealthCareMvc5.CompliantApprovalServiceRef.CompliantApproval> objCompliantApproval);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompliantApprovalService/ListUpdate", ReplyAction="http://tempuri.org/ICompliantApprovalService/ListUpdateResponse")]
        System.Threading.Tasks.Task<bool> ListUpdateAsync(System.Collections.Generic.List<HealthCareMvc5.CompliantApprovalServiceRef.CompliantApproval> objCompliantApproval);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompliantApprovalService/ListMainPage", ReplyAction="http://tempuri.org/ICompliantApprovalService/ListMainPageResponse")]
        System.Collections.Generic.List<HealthCareMvc5.CompliantApprovalServiceRef.CompliantApproval> ListMainPage(int PageNo, int RowsPerPage, string SearchText, System.DateTime FromDate, System.DateTime ToDate, long UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompliantApprovalService/ListMainPage", ReplyAction="http://tempuri.org/ICompliantApprovalService/ListMainPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.CompliantApprovalServiceRef.CompliantApproval>> ListMainPageAsync(int PageNo, int RowsPerPage, string SearchText, System.DateTime FromDate, System.DateTime ToDate, long UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompliantApprovalService/ListGrid", ReplyAction="http://tempuri.org/ICompliantApprovalService/ListGridResponse")]
        System.Collections.Generic.List<HealthCareMvc5.CompliantApprovalServiceRef.CompliantApproval> ListGrid(long objissueDtlID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompliantApprovalService/ListGrid", ReplyAction="http://tempuri.org/ICompliantApprovalService/ListGridResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.CompliantApprovalServiceRef.CompliantApproval>> ListGridAsync(long objissueDtlID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompliantApprovalService/ListClientIssueEntry", ReplyAction="http://tempuri.org/ICompliantApprovalService/ListClientIssueEntryResponse")]
        bool ListClientIssueEntry(string IssueDetailID, long UserID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompliantApprovalService/ListClientIssueEntry", ReplyAction="http://tempuri.org/ICompliantApprovalService/ListClientIssueEntryResponse")]
        System.Threading.Tasks.Task<bool> ListClientIssueEntryAsync(string IssueDetailID, long UserID, int ClientID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICompliantApprovalServiceChannel : HealthCareMvc5.CompliantApprovalServiceRef.ICompliantApprovalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompliantApprovalServiceClient : System.ServiceModel.ClientBase<HealthCareMvc5.CompliantApprovalServiceRef.ICompliantApprovalService>, HealthCareMvc5.CompliantApprovalServiceRef.ICompliantApprovalService {
        
        public CompliantApprovalServiceClient() {
        }
        
        public CompliantApprovalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompliantApprovalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompliantApprovalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompliantApprovalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public long CreateComments(HealthCareMvc5.CompliantApprovalServiceRef.IssueClearance objissue) {
            return base.Channel.CreateComments(objissue);
        }
        
        public System.Threading.Tasks.Task<long> CreateCommentsAsync(HealthCareMvc5.CompliantApprovalServiceRef.IssueClearance objissue) {
            return base.Channel.CreateCommentsAsync(objissue);
        }
        
        public bool UpdateCompliantApproval(HealthCareMvc5.CompliantApprovalServiceRef.CompliantApproval objCompliantNO) {
            return base.Channel.UpdateCompliantApproval(objCompliantNO);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCompliantApprovalAsync(HealthCareMvc5.CompliantApprovalServiceRef.CompliantApproval objCompliantNO) {
            return base.Channel.UpdateCompliantApprovalAsync(objCompliantNO);
        }
        
        public bool ListUpdate(System.Collections.Generic.List<HealthCareMvc5.CompliantApprovalServiceRef.CompliantApproval> objCompliantApproval) {
            return base.Channel.ListUpdate(objCompliantApproval);
        }
        
        public System.Threading.Tasks.Task<bool> ListUpdateAsync(System.Collections.Generic.List<HealthCareMvc5.CompliantApprovalServiceRef.CompliantApproval> objCompliantApproval) {
            return base.Channel.ListUpdateAsync(objCompliantApproval);
        }
        
        public System.Collections.Generic.List<HealthCareMvc5.CompliantApprovalServiceRef.CompliantApproval> ListMainPage(int PageNo, int RowsPerPage, string SearchText, System.DateTime FromDate, System.DateTime ToDate, long UserID) {
            return base.Channel.ListMainPage(PageNo, RowsPerPage, SearchText, FromDate, ToDate, UserID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.CompliantApprovalServiceRef.CompliantApproval>> ListMainPageAsync(int PageNo, int RowsPerPage, string SearchText, System.DateTime FromDate, System.DateTime ToDate, long UserID) {
            return base.Channel.ListMainPageAsync(PageNo, RowsPerPage, SearchText, FromDate, ToDate, UserID);
        }
        
        public System.Collections.Generic.List<HealthCareMvc5.CompliantApprovalServiceRef.CompliantApproval> ListGrid(long objissueDtlID) {
            return base.Channel.ListGrid(objissueDtlID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.CompliantApprovalServiceRef.CompliantApproval>> ListGridAsync(long objissueDtlID) {
            return base.Channel.ListGridAsync(objissueDtlID);
        }
        
        public bool ListClientIssueEntry(string IssueDetailID, long UserID, int ClientID) {
            return base.Channel.ListClientIssueEntry(IssueDetailID, UserID, ClientID);
        }
        
        public System.Threading.Tasks.Task<bool> ListClientIssueEntryAsync(string IssueDetailID, long UserID, int ClientID) {
            return base.Channel.ListClientIssueEntryAsync(IssueDetailID, UserID, ClientID);
        }
    }
}
