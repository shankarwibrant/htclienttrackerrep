//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HealthCareMvc5.ClientIssueRaiseRef {
    using System.Runtime.Serialization;
    using System;
    using System.Collections.Generic;

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientIssueRaise", Namespace="http://schemas.datacontract.org/2004/07/HealthCareObjects.Client")]
    [System.SerializableAttribute()]
    public partial class ClientIssueRaise : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ActiveflageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AssignedIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CIssueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClientAddressIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClientNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompltIssueNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ContactNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedDate1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDate2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateofIntializationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FeatureIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeatureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileUploadFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FilecountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FormIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsSaveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IssueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IssueDate1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueDate2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IssueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueSubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IssueTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IssueTypeNameIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IssuedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ModuleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelfAssignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNmaeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TotalRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Activeflage {
            get {
                return this.ActiveflageField;
            }
            set {
                if ((this.ActiveflageField.Equals(value) != true)) {
                    this.ActiveflageField = value;
                    this.RaisePropertyChanged("Activeflage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AssignedID {
            get {
                return this.AssignedIDField;
            }
            set {
                if ((this.AssignedIDField.Equals(value) != true)) {
                    this.AssignedIDField = value;
                    this.RaisePropertyChanged("AssignedID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CIssueID {
            get {
                return this.CIssueIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CIssueIDField, value) != true)) {
                    this.CIssueIDField = value;
                    this.RaisePropertyChanged("CIssueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClientAddressID {
            get {
                return this.ClientAddressIDField;
            }
            set {
                if ((this.ClientAddressIDField.Equals(value) != true)) {
                    this.ClientAddressIDField = value;
                    this.RaisePropertyChanged("ClientAddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClientNameID {
            get {
                return this.ClientNameIDField;
            }
            set {
                if ((this.ClientNameIDField.Equals(value) != true)) {
                    this.ClientNameIDField = value;
                    this.RaisePropertyChanged("ClientNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompltIssueNo {
            get {
                return this.CompltIssueNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CompltIssueNoField, value) != true)) {
                    this.CompltIssueNoField = value;
                    this.RaisePropertyChanged("CompltIssueNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ContactNo {
            get {
                return this.ContactNoField;
            }
            set {
                if ((this.ContactNoField.Equals(value) != true)) {
                    this.ContactNoField = value;
                    this.RaisePropertyChanged("ContactNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedDate1 {
            get {
                return this.CreatedDate1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedDate1Field, value) != true)) {
                    this.CreatedDate1Field = value;
                    this.RaisePropertyChanged("CreatedDate1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate2 {
            get {
                return this.CreatedDate2Field;
            }
            set {
                if ((this.CreatedDate2Field.Equals(value) != true)) {
                    this.CreatedDate2Field = value;
                    this.RaisePropertyChanged("CreatedDate2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateofIntialization {
            get {
                return this.DateofIntializationField;
            }
            set {
                if ((this.DateofIntializationField.Equals(value) != true)) {
                    this.DateofIntializationField = value;
                    this.RaisePropertyChanged("DateofIntialization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentIDField, value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailId {
            get {
                return this.EmailIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIdField, value) != true)) {
                    this.EmailIdField = value;
                    this.RaisePropertyChanged("EmailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FeatureID {
            get {
                return this.FeatureIDField;
            }
            set {
                if ((this.FeatureIDField.Equals(value) != true)) {
                    this.FeatureIDField = value;
                    this.RaisePropertyChanged("FeatureID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeatureName {
            get {
                return this.FeatureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureNameField, value) != true)) {
                    this.FeatureNameField = value;
                    this.RaisePropertyChanged("FeatureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] File {
            get {
                return this.FileField;
            }
            set {
                if ((object.ReferenceEquals(this.FileField, value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileUploadFlag {
            get {
                return this.FileUploadFlagField;
            }
            set {
                if ((this.FileUploadFlagField.Equals(value) != true)) {
                    this.FileUploadFlagField = value;
                    this.RaisePropertyChanged("FileUploadFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Filecount {
            get {
                return this.FilecountField;
            }
            set {
                if ((this.FilecountField.Equals(value) != true)) {
                    this.FilecountField = value;
                    this.RaisePropertyChanged("Filecount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FormID {
            get {
                return this.FormIDField;
            }
            set {
                if ((this.FormIDField.Equals(value) != true)) {
                    this.FormIDField = value;
                    this.RaisePropertyChanged("FormID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormName {
            get {
                return this.FormNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormNameField, value) != true)) {
                    this.FormNameField = value;
                    this.RaisePropertyChanged("FormName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsSave {
            get {
                return this.IsSaveField;
            }
            set {
                if ((this.IsSaveField.Equals(value) != true)) {
                    this.IsSaveField = value;
                    this.RaisePropertyChanged("IsSave");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IssueDate {
            get {
                return this.IssueDateField;
            }
            set {
                if ((this.IssueDateField.Equals(value) != true)) {
                    this.IssueDateField = value;
                    this.RaisePropertyChanged("IssueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IssueDate1 {
            get {
                return this.IssueDate1Field;
            }
            set {
                if ((this.IssueDate1Field.Equals(value) != true)) {
                    this.IssueDate1Field = value;
                    this.RaisePropertyChanged("IssueDate1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueDate2 {
            get {
                return this.IssueDate2Field;
            }
            set {
                if ((object.ReferenceEquals(this.IssueDate2Field, value) != true)) {
                    this.IssueDate2Field = value;
                    this.RaisePropertyChanged("IssueDate2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IssueID {
            get {
                return this.IssueIDField;
            }
            set {
                if ((this.IssueIDField.Equals(value) != true)) {
                    this.IssueIDField = value;
                    this.RaisePropertyChanged("IssueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueSubject {
            get {
                return this.IssueSubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueSubjectField, value) != true)) {
                    this.IssueSubjectField = value;
                    this.RaisePropertyChanged("IssueSubject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueType {
            get {
                return this.IssueTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueTypeField, value) != true)) {
                    this.IssueTypeField = value;
                    this.RaisePropertyChanged("IssueType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IssueTypeID {
            get {
                return this.IssueTypeIDField;
            }
            set {
                if ((this.IssueTypeIDField.Equals(value) != true)) {
                    this.IssueTypeIDField = value;
                    this.RaisePropertyChanged("IssueTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IssueTypeNameId {
            get {
                return this.IssueTypeNameIdField;
            }
            set {
                if ((this.IssueTypeNameIdField.Equals(value) != true)) {
                    this.IssueTypeNameIdField = value;
                    this.RaisePropertyChanged("IssueTypeNameId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IssuedBy {
            get {
                return this.IssuedByField;
            }
            set {
                if ((this.IssuedByField.Equals(value) != true)) {
                    this.IssuedByField = value;
                    this.RaisePropertyChanged("IssuedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ModuleID {
            get {
                return this.ModuleIDField;
            }
            set {
                if ((this.ModuleIDField.Equals(value) != true)) {
                    this.ModuleIDField = value;
                    this.RaisePropertyChanged("ModuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductNo {
            get {
                return this.ProductNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNoField, value) != true)) {
                    this.ProductNoField = value;
                    this.RaisePropertyChanged("ProductNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SNo {
            get {
                return this.SNoField;
            }
            set {
                if ((this.SNoField.Equals(value) != true)) {
                    this.SNoField = value;
                    this.RaisePropertyChanged("SNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelfAssign {
            get {
                return this.SelfAssignField;
            }
            set {
                if ((this.SelfAssignField.Equals(value) != true)) {
                    this.SelfAssignField = value;
                    this.RaisePropertyChanged("SelfAssign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNo {
            get {
                return this.SerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNoField, value) != true)) {
                    this.SerialNoField = value;
                    this.RaisePropertyChanged("SerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortNmae {
            get {
                return this.ShortNmaeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNmaeField, value) != true)) {
                    this.ShortNmaeField = value;
                    this.RaisePropertyChanged("ShortNmae");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.fileNameField, value) != true)) {
                    this.fileNameField = value;
                    this.RaisePropertyChanged("fileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileUpload", Namespace="http://schemas.datacontract.org/2004/07/HealthCareObjects.Client")]
    [System.SerializableAttribute()]
    public partial class FileUpload : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileSNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsSaveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IssueDetailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] StringContentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileContent {
            get {
                return this.FileContentField;
            }
            set {
                if ((object.ReferenceEquals(this.FileContentField, value) != true)) {
                    this.FileContentField = value;
                    this.RaisePropertyChanged("FileContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileId {
            get {
                return this.FileIdField;
            }
            set {
                if ((this.FileIdField.Equals(value) != true)) {
                    this.FileIdField = value;
                    this.RaisePropertyChanged("FileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileSNo {
            get {
                return this.FileSNoField;
            }
            set {
                if ((this.FileSNoField.Equals(value) != true)) {
                    this.FileSNoField = value;
                    this.RaisePropertyChanged("FileSNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsSave {
            get {
                return this.IsSaveField;
            }
            set {
                if ((this.IsSaveField.Equals(value) != true)) {
                    this.IsSaveField = value;
                    this.RaisePropertyChanged("IsSave");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IssueDetailId {
            get {
                return this.IssueDetailIdField;
            }
            set {
                if ((this.IssueDetailIdField.Equals(value) != true)) {
                    this.IssueDetailIdField = value;
                    this.RaisePropertyChanged("IssueDetailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] StringContent {
            get {
                return this.StringContentField;
            }
            set {
                if ((object.ReferenceEquals(this.StringContentField, value) != true)) {
                    this.StringContentField = value;
                    this.RaisePropertyChanged("StringContent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientIssueRaiseDtl", Namespace="http://schemas.datacontract.org/2004/07/HealthCareObjects.Client")]
    [System.SerializableAttribute()]
    public partial class ClientIssueRaiseDtl : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AaprovalflagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ActiveflageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AssignedIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AssignedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CilentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompltIssueNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeatureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileUploadFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IssueClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IssueDate1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueDate2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IssueDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IssueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IssueTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PastIssueDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelfAssignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime closeddateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string closednameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Aaprovalflag {
            get {
                return this.AaprovalflagField;
            }
            set {
                if ((this.AaprovalflagField.Equals(value) != true)) {
                    this.AaprovalflagField = value;
                    this.RaisePropertyChanged("Aaprovalflag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Activeflage {
            get {
                return this.ActiveflageField;
            }
            set {
                if ((this.ActiveflageField.Equals(value) != true)) {
                    this.ActiveflageField = value;
                    this.RaisePropertyChanged("Activeflage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AssignedID {
            get {
                return this.AssignedIDField;
            }
            set {
                if ((this.AssignedIDField.Equals(value) != true)) {
                    this.AssignedIDField = value;
                    this.RaisePropertyChanged("AssignedID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AssignedTo {
            get {
                return this.AssignedToField;
            }
            set {
                if ((this.AssignedToField.Equals(value) != true)) {
                    this.AssignedToField = value;
                    this.RaisePropertyChanged("AssignedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CilentID {
            get {
                return this.CilentIDField;
            }
            set {
                if ((this.CilentIDField.Equals(value) != true)) {
                    this.CilentIDField = value;
                    this.RaisePropertyChanged("CilentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompltIssueNo {
            get {
                return this.CompltIssueNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CompltIssueNoField, value) != true)) {
                    this.CompltIssueNoField = value;
                    this.RaisePropertyChanged("CompltIssueNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedName {
            get {
                return this.CreatedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedNameField, value) != true)) {
                    this.CreatedNameField = value;
                    this.RaisePropertyChanged("CreatedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeatureName {
            get {
                return this.FeatureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureNameField, value) != true)) {
                    this.FeatureNameField = value;
                    this.RaisePropertyChanged("FeatureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileContent {
            get {
                return this.FileContentField;
            }
            set {
                if ((object.ReferenceEquals(this.FileContentField, value) != true)) {
                    this.FileContentField = value;
                    this.RaisePropertyChanged("FileContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileCount {
            get {
                return this.FileCountField;
            }
            set {
                if ((this.FileCountField.Equals(value) != true)) {
                    this.FileCountField = value;
                    this.RaisePropertyChanged("FileCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileId {
            get {
                return this.FileIdField;
            }
            set {
                if ((this.FileIdField.Equals(value) != true)) {
                    this.FileIdField = value;
                    this.RaisePropertyChanged("FileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileUploadFlag {
            get {
                return this.FileUploadFlagField;
            }
            set {
                if ((this.FileUploadFlagField.Equals(value) != true)) {
                    this.FileUploadFlagField = value;
                    this.RaisePropertyChanged("FileUploadFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormID {
            get {
                return this.FormIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FormIDField, value) != true)) {
                    this.FormIDField = value;
                    this.RaisePropertyChanged("FormID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormName {
            get {
                return this.FormNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormNameField, value) != true)) {
                    this.FormNameField = value;
                    this.RaisePropertyChanged("FormName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IssueClientID {
            get {
                return this.IssueClientIDField;
            }
            set {
                if ((this.IssueClientIDField.Equals(value) != true)) {
                    this.IssueClientIDField = value;
                    this.RaisePropertyChanged("IssueClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IssueDate1 {
            get {
                return this.IssueDate1Field;
            }
            set {
                if ((this.IssueDate1Field.Equals(value) != true)) {
                    this.IssueDate1Field = value;
                    this.RaisePropertyChanged("IssueDate1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueDate2 {
            get {
                return this.IssueDate2Field;
            }
            set {
                if ((object.ReferenceEquals(this.IssueDate2Field, value) != true)) {
                    this.IssueDate2Field = value;
                    this.RaisePropertyChanged("IssueDate2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueDescription {
            get {
                return this.IssueDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueDescriptionField, value) != true)) {
                    this.IssueDescriptionField = value;
                    this.RaisePropertyChanged("IssueDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IssueDetailID {
            get {
                return this.IssueDetailIDField;
            }
            set {
                if ((this.IssueDetailIDField.Equals(value) != true)) {
                    this.IssueDetailIDField = value;
                    this.RaisePropertyChanged("IssueDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IssueID {
            get {
                return this.IssueIDField;
            }
            set {
                if ((this.IssueIDField.Equals(value) != true)) {
                    this.IssueIDField = value;
                    this.RaisePropertyChanged("IssueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueType {
            get {
                return this.IssueTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueTypeField, value) != true)) {
                    this.IssueTypeField = value;
                    this.RaisePropertyChanged("IssueType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IssueTypeId {
            get {
                return this.IssueTypeIdField;
            }
            set {
                if ((this.IssueTypeIdField.Equals(value) != true)) {
                    this.IssueTypeIdField = value;
                    this.RaisePropertyChanged("IssueTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleID {
            get {
                return this.ModuleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleIDField, value) != true)) {
                    this.ModuleIDField = value;
                    this.RaisePropertyChanged("ModuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PastIssueDetailID {
            get {
                return this.PastIssueDetailIDField;
            }
            set {
                if ((this.PastIssueDetailIDField.Equals(value) != true)) {
                    this.PastIssueDetailIDField = value;
                    this.RaisePropertyChanged("PastIssueDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SNO {
            get {
                return this.SNOField;
            }
            set {
                if ((this.SNOField.Equals(value) != true)) {
                    this.SNOField = value;
                    this.RaisePropertyChanged("SNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelfAssign {
            get {
                return this.SelfAssignField;
            }
            set {
                if ((this.SelfAssignField.Equals(value) != true)) {
                    this.SelfAssignField = value;
                    this.RaisePropertyChanged("SelfAssign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime closeddate {
            get {
                return this.closeddateField;
            }
            set {
                if ((this.closeddateField.Equals(value) != true)) {
                    this.closeddateField = value;
                    this.RaisePropertyChanged("closeddate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string closedname {
            get {
                return this.closednameField;
            }
            set {
                if ((object.ReferenceEquals(this.closednameField, value) != true)) {
                    this.closednameField = value;
                    this.RaisePropertyChanged("closedname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://schemas.datacontract.org/2004/07/HealthCareObjects.Client")]
    [System.SerializableAttribute()]
    public partial class Department : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Count1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeptDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActiveFlag {
            get {
                return this.ActiveFlagField;
            }
            set {
                if ((this.ActiveFlagField.Equals(value) != true)) {
                    this.ActiveFlagField = value;
                    this.RaisePropertyChanged("ActiveFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Count1 {
            get {
                return this.Count1Field;
            }
            set {
                if ((this.Count1Field.Equals(value) != true)) {
                    this.Count1Field = value;
                    this.RaisePropertyChanged("Count1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentCode {
            get {
                return this.DepartmentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentCodeField, value) != true)) {
                    this.DepartmentCodeField = value;
                    this.RaisePropertyChanged("DepartmentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((this.DepartmentIDField.Equals(value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeptDetails {
            get {
                return this.DeptDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeptDetailsField, value) != true)) {
                    this.DeptDetailsField = value;
                    this.RaisePropertyChanged("DeptDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordNo {
            get {
                return this.RecordNoField;
            }
            set {
                if ((this.RecordNoField.Equals(value) != true)) {
                    this.RecordNoField = value;
                    this.RaisePropertyChanged("RecordNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientInformation", Namespace="http://schemas.datacontract.org/2004/07/HealthCareObjects.Client")]
    [System.SerializableAttribute()]
    public partial class ClientInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveflagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChkDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClientUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int F_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeatureIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkForVoIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ModuleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SmcstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TotalRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VPNPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VPNUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebsiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long formfeatureidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string formfeaturenameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Activeflag {
            get {
                return this.ActiveflagField;
            }
            set {
                if ((this.ActiveflagField.Equals(value) != true)) {
                    this.ActiveflagField = value;
                    this.RaisePropertyChanged("Activeflag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChkDescription {
            get {
                return this.ChkDescriptionField;
            }
            set {
                if ((this.ChkDescriptionField.Equals(value) != true)) {
                    this.ChkDescriptionField = value;
                    this.RaisePropertyChanged("ChkDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClientUserID {
            get {
                return this.ClientUserIDField;
            }
            set {
                if ((this.ClientUserIDField.Equals(value) != true)) {
                    this.ClientUserIDField = value;
                    this.RaisePropertyChanged("ClientUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Desc {
            get {
                return this.DescField;
            }
            set {
                if ((object.ReferenceEquals(this.DescField, value) != true)) {
                    this.DescField = value;
                    this.RaisePropertyChanged("Desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int F_id {
            get {
                return this.F_idField;
            }
            set {
                if ((this.F_idField.Equals(value) != true)) {
                    this.F_idField = value;
                    this.RaisePropertyChanged("F_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FeatureID {
            get {
                return this.FeatureIDField;
            }
            set {
                if ((this.FeatureIDField.Equals(value) != true)) {
                    this.FeatureIDField = value;
                    this.RaisePropertyChanged("FeatureID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormID {
            get {
                return this.FormIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FormIDField, value) != true)) {
                    this.FormIDField = value;
                    this.RaisePropertyChanged("FormID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormName {
            get {
                return this.FormNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormNameField, value) != true)) {
                    this.FormNameField = value;
                    this.RaisePropertyChanged("FormName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Licence {
            get {
                return this.LicenceField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenceField, value) != true)) {
                    this.LicenceField = value;
                    this.RaisePropertyChanged("Licence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkForVoIP {
            get {
                return this.LinkForVoIPField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkForVoIPField, value) != true)) {
                    this.LinkForVoIPField = value;
                    this.RaisePropertyChanged("LinkForVoIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNO {
            get {
                return this.MobileNOField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNOField, value) != true)) {
                    this.MobileNOField = value;
                    this.RaisePropertyChanged("MobileNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ModuleID {
            get {
                return this.ModuleIDField;
            }
            set {
                if ((this.ModuleIDField.Equals(value) != true)) {
                    this.ModuleIDField = value;
                    this.RaisePropertyChanged("ModuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Productid {
            get {
                return this.ProductidField;
            }
            set {
                if ((this.ProductidField.Equals(value) != true)) {
                    this.ProductidField = value;
                    this.RaisePropertyChanged("Productid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Productname {
            get {
                return this.ProductnameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductnameField, value) != true)) {
                    this.ProductnameField = value;
                    this.RaisePropertyChanged("Productname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Smcstatus {
            get {
                return this.SmcstatusField;
            }
            set {
                if ((this.SmcstatusField.Equals(value) != true)) {
                    this.SmcstatusField = value;
                    this.RaisePropertyChanged("Smcstatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VPNPassword {
            get {
                return this.VPNPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.VPNPasswordField, value) != true)) {
                    this.VPNPasswordField = value;
                    this.RaisePropertyChanged("VPNPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VPNUser {
            get {
                return this.VPNUserField;
            }
            set {
                if ((object.ReferenceEquals(this.VPNUserField, value) != true)) {
                    this.VPNUserField = value;
                    this.RaisePropertyChanged("VPNUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website {
            get {
                return this.WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteField, value) != true)) {
                    this.WebsiteField = value;
                    this.RaisePropertyChanged("Website");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zipcode {
            get {
                return this.ZipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipcodeField, value) != true)) {
                    this.ZipcodeField = value;
                    this.RaisePropertyChanged("Zipcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long formfeatureid {
            get {
                return this.formfeatureidField;
            }
            set {
                if ((this.formfeatureidField.Equals(value) != true)) {
                    this.formfeatureidField = value;
                    this.RaisePropertyChanged("formfeatureid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string formfeaturename {
            get {
                return this.formfeaturenameField;
            }
            set {
                if ((object.ReferenceEquals(this.formfeaturenameField, value) != true)) {
                    this.formfeaturenameField = value;
                    this.RaisePropertyChanged("formfeaturename");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Feature", Namespace="http://schemas.datacontract.org/2004/07/HealthCareObjects.Client")]
    [System.SerializableAttribute()]
    public partial class Feature : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AutoidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int F_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FeatureDtlIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FeatureIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeatureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FormIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModuleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Autoid {
            get {
                return this.AutoidField;
            }
            set {
                if ((this.AutoidField.Equals(value) != true)) {
                    this.AutoidField = value;
                    this.RaisePropertyChanged("Autoid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int F_Id {
            get {
                return this.F_IdField;
            }
            set {
                if ((this.F_IdField.Equals(value) != true)) {
                    this.F_IdField = value;
                    this.RaisePropertyChanged("F_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FeatureDtlId {
            get {
                return this.FeatureDtlIdField;
            }
            set {
                if ((this.FeatureDtlIdField.Equals(value) != true)) {
                    this.FeatureDtlIdField = value;
                    this.RaisePropertyChanged("FeatureDtlId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FeatureID {
            get {
                return this.FeatureIDField;
            }
            set {
                if ((this.FeatureIDField.Equals(value) != true)) {
                    this.FeatureIDField = value;
                    this.RaisePropertyChanged("FeatureID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeatureName {
            get {
                return this.FeatureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureNameField, value) != true)) {
                    this.FeatureNameField = value;
                    this.RaisePropertyChanged("FeatureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FormID {
            get {
                return this.FormIDField;
            }
            set {
                if ((this.FormIDField.Equals(value) != true)) {
                    this.FormIDField = value;
                    this.RaisePropertyChanged("FormID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormName {
            get {
                return this.FormNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormNameField, value) != true)) {
                    this.FormNameField = value;
                    this.RaisePropertyChanged("FormName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModuleID {
            get {
                return this.ModuleIDField;
            }
            set {
                if ((this.ModuleIDField.Equals(value) != true)) {
                    this.ModuleIDField = value;
                    this.RaisePropertyChanged("ModuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SNo {
            get {
                return this.SNoField;
            }
            set {
                if ((this.SNoField.Equals(value) != true)) {
                    this.SNoField = value;
                    this.RaisePropertyChanged("SNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientIssueRaiseRef.IClientIssueRaiseService")]
    public interface IClientIssueRaiseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/Create", ReplyAction="http://tempuri.org/IClientIssueRaiseService/CreateResponse")]
        long Create(HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaise IssueDetails, System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.FileUpload> Fileupload, System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.FileUpload> DelListobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/Create", ReplyAction="http://tempuri.org/IClientIssueRaiseService/CreateResponse")]
        System.Threading.Tasks.Task<long> CreateAsync(HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaise IssueDetails, System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.FileUpload> Fileupload, System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.FileUpload> DelListobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/DeleteIssueRaiseById", ReplyAction="http://tempuri.org/IClientIssueRaiseService/DeleteIssueRaiseByIdResponse")]
        bool DeleteIssueRaiseById(HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaise Dltproperty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/DeleteIssueRaiseById", ReplyAction="http://tempuri.org/IClientIssueRaiseService/DeleteIssueRaiseByIdResponse")]
        System.Threading.Tasks.Task<bool> DeleteIssueRaiseByIdAsync(HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaise Dltproperty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/ListMainpage", ReplyAction="http://tempuri.org/IClientIssueRaiseService/ListMainpageResponse")]
        System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaise> ListMainpage(int PageNO, int RowperPage, int ClientID, int UserID, string searchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/ListMainpage", ReplyAction="http://tempuri.org/IClientIssueRaiseService/ListMainpageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaise>> ListMainpageAsync(int PageNO, int RowperPage, int ClientID, int UserID, string searchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/clientList", ReplyAction="http://tempuri.org/IClientIssueRaiseService/clientListResponse")]
        System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaise> clientList(long UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/clientList", ReplyAction="http://tempuri.org/IClientIssueRaiseService/clientListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaise>> clientListAsync(long UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/UpdateIssueEntrys", ReplyAction="http://tempuri.org/IClientIssueRaiseService/UpdateIssueEntrysResponse")]
        HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl UpdateIssueEntrys(string idString, HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl objissuedtllist, System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.FileUpload> objFileUpload);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/UpdateIssueEntrys", ReplyAction="http://tempuri.org/IClientIssueRaiseService/UpdateIssueEntrysResponse")]
        System.Threading.Tasks.Task<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl> UpdateIssueEntrysAsync(string idString, HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl objissuedtllist, System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.FileUpload> objFileUpload);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/SaveRecord", ReplyAction="http://tempuri.org/IClientIssueRaiseService/SaveRecordResponse")]
        bool SaveRecord(System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl> objissueDtl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/SaveRecord", ReplyAction="http://tempuri.org/IClientIssueRaiseService/SaveRecordResponse")]
        System.Threading.Tasks.Task<bool> SaveRecordAsync(System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl> objissueDtl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/GetAllFileById", ReplyAction="http://tempuri.org/IClientIssueRaiseService/GetAllFileByIdResponse")]
        System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.FileUpload> GetAllFileById(long IssueDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/GetAllFileById", ReplyAction="http://tempuri.org/IClientIssueRaiseService/GetAllFileByIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.FileUpload>> GetAllFileByIdAsync(long IssueDetailID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/ListByDtLID", ReplyAction="http://tempuri.org/IClientIssueRaiseService/ListByDtLIDResponse")]
        System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl> ListByDtLID(long IssueID, int sNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/ListByDtLID", ReplyAction="http://tempuri.org/IClientIssueRaiseService/ListByDtLIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl>> ListByDtLIDAsync(long IssueID, int sNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/AutoID", ReplyAction="http://tempuri.org/IClientIssueRaiseService/AutoIDResponse")]
        string AutoID(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/AutoID", ReplyAction="http://tempuri.org/IClientIssueRaiseService/AutoIDResponse")]
        System.Threading.Tasks.Task<string> AutoIDAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/ListDepartmentName", ReplyAction="http://tempuri.org/IClientIssueRaiseService/ListDepartmentNameResponse")]
        System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.Department> ListDepartmentName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/ListDepartmentName", ReplyAction="http://tempuri.org/IClientIssueRaiseService/ListDepartmentNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.Department>> ListDepartmentNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/ListModuleName", ReplyAction="http://tempuri.org/IClientIssueRaiseService/ListModuleNameResponse")]
        System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientInformation> ListModuleName(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/ListModuleName", ReplyAction="http://tempuri.org/IClientIssueRaiseService/ListModuleNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientInformation>> ListModuleNameAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/ListFormName", ReplyAction="http://tempuri.org/IClientIssueRaiseService/ListFormNameResponse")]
        System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl> ListFormName(long ModuleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/ListFormName", ReplyAction="http://tempuri.org/IClientIssueRaiseService/ListFormNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl>> ListFormNameAsync(long ModuleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/ListCompltIssueNo", ReplyAction="http://tempuri.org/IClientIssueRaiseService/ListCompltIssueNoResponse")]
        string ListCompltIssueNo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/ListCompltIssueNo", ReplyAction="http://tempuri.org/IClientIssueRaiseService/ListCompltIssueNoResponse")]
        System.Threading.Tasks.Task<string> ListCompltIssueNoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/ListFeatureName", ReplyAction="http://tempuri.org/IClientIssueRaiseService/ListFeatureNameResponse")]
        System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.Feature> ListFeatureName(long FormID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/ListFeatureName", ReplyAction="http://tempuri.org/IClientIssueRaiseService/ListFeatureNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.Feature>> ListFeatureNameAsync(long FormID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/ListIssueDate", ReplyAction="http://tempuri.org/IClientIssueRaiseService/ListIssueDateResponse")]
        string ListIssueDate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/ListIssueDate", ReplyAction="http://tempuri.org/IClientIssueRaiseService/ListIssueDateResponse")]
        System.Threading.Tasks.Task<string> ListIssueDateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/AutoIDSelf", ReplyAction="http://tempuri.org/IClientIssueRaiseService/AutoIDSelfResponse")]
        string AutoIDSelf();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/AutoIDSelf", ReplyAction="http://tempuri.org/IClientIssueRaiseService/AutoIDSelfResponse")]
        System.Threading.Tasks.Task<string> AutoIDSelfAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/PastIssueSearch", ReplyAction="http://tempuri.org/IClientIssueRaiseService/PastIssueSearchResponse")]
        System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl> PastIssueSearch(long clientId, long moduleId, long formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/PastIssueSearch", ReplyAction="http://tempuri.org/IClientIssueRaiseService/PastIssueSearchResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl>> PastIssueSearchAsync(long clientId, long moduleId, long formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/FileuploadSer", ReplyAction="http://tempuri.org/IClientIssueRaiseService/FileuploadSerResponse")]
        string FileuploadSer(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientIssueRaiseService/FileuploadSer", ReplyAction="http://tempuri.org/IClientIssueRaiseService/FileuploadSerResponse")]
        System.Threading.Tasks.Task<string> FileuploadSerAsync(long id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientIssueRaiseServiceChannel : HealthCareMvc5.ClientIssueRaiseRef.IClientIssueRaiseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientIssueRaiseServiceClient : System.ServiceModel.ClientBase<HealthCareMvc5.ClientIssueRaiseRef.IClientIssueRaiseService>, HealthCareMvc5.ClientIssueRaiseRef.IClientIssueRaiseService {
        
        public ClientIssueRaiseServiceClient() {
        }
        
        public ClientIssueRaiseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientIssueRaiseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientIssueRaiseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientIssueRaiseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public long Create(HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaise IssueDetails, System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.FileUpload> Fileupload, System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.FileUpload> DelListobj) {
            return base.Channel.Create(IssueDetails, Fileupload, DelListobj);
        }
        
        public System.Threading.Tasks.Task<long> CreateAsync(HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaise IssueDetails, System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.FileUpload> Fileupload, System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.FileUpload> DelListobj) {
            return base.Channel.CreateAsync(IssueDetails, Fileupload, DelListobj);
        }
        
        public bool DeleteIssueRaiseById(HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaise Dltproperty) {
            return base.Channel.DeleteIssueRaiseById(Dltproperty);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteIssueRaiseByIdAsync(HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaise Dltproperty) {
            return base.Channel.DeleteIssueRaiseByIdAsync(Dltproperty);
        }
        
        public System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaise> ListMainpage(int PageNO, int RowperPage, int ClientID, int UserID, string searchText) {
            return base.Channel.ListMainpage(PageNO, RowperPage, ClientID, UserID, searchText);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaise>> ListMainpageAsync(int PageNO, int RowperPage, int ClientID, int UserID, string searchText) {
            return base.Channel.ListMainpageAsync(PageNO, RowperPage, ClientID, UserID, searchText);
        }
        
        public System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaise> clientList(long UserID) {
            return base.Channel.clientList(UserID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaise>> clientListAsync(long UserID) {
            return base.Channel.clientListAsync(UserID);
        }
        
        public HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl UpdateIssueEntrys(string idString, HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl objissuedtllist, System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.FileUpload> objFileUpload) {
            return base.Channel.UpdateIssueEntrys(idString, objissuedtllist, objFileUpload);
        }
        
        public System.Threading.Tasks.Task<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl> UpdateIssueEntrysAsync(string idString, HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl objissuedtllist, System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.FileUpload> objFileUpload) {
            return base.Channel.UpdateIssueEntrysAsync(idString, objissuedtllist, objFileUpload);
        }
        
        public bool SaveRecord(System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl> objissueDtl) {
            return base.Channel.SaveRecord(objissueDtl);
        }
        
        public System.Threading.Tasks.Task<bool> SaveRecordAsync(System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl> objissueDtl) {
            return base.Channel.SaveRecordAsync(objissueDtl);
        }
        
        public System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.FileUpload> GetAllFileById(long IssueDetailID) {
            return base.Channel.GetAllFileById(IssueDetailID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.FileUpload>> GetAllFileByIdAsync(long IssueDetailID) {
            return base.Channel.GetAllFileByIdAsync(IssueDetailID);
        }
        
        public System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl> ListByDtLID(long IssueID, int sNo) {
            return base.Channel.ListByDtLID(IssueID, sNo);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl>> ListByDtLIDAsync(long IssueID, int sNo) {
            return base.Channel.ListByDtLIDAsync(IssueID, sNo);
        }
        
        public string AutoID(int ClientID) {
            return base.Channel.AutoID(ClientID);
        }
        
        public System.Threading.Tasks.Task<string> AutoIDAsync(int ClientID) {
            return base.Channel.AutoIDAsync(ClientID);
        }
        
        public System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.Department> ListDepartmentName() {
            return base.Channel.ListDepartmentName();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.Department>> ListDepartmentNameAsync() {
            return base.Channel.ListDepartmentNameAsync();
        }
        
        public System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientInformation> ListModuleName(int ClientID) {
            return base.Channel.ListModuleName(ClientID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientInformation>> ListModuleNameAsync(int ClientID) {
            return base.Channel.ListModuleNameAsync(ClientID);
        }
        
        public System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl> ListFormName(long ModuleID) {
            return base.Channel.ListFormName(ModuleID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl>> ListFormNameAsync(long ModuleID) {
            return base.Channel.ListFormNameAsync(ModuleID);
        }
        
        public string ListCompltIssueNo() {
            return base.Channel.ListCompltIssueNo();
        }
        
        public System.Threading.Tasks.Task<string> ListCompltIssueNoAsync() {
            return base.Channel.ListCompltIssueNoAsync();
        }
        
        public System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.Feature> ListFeatureName(long FormID) {
            return base.Channel.ListFeatureName(FormID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.Feature>> ListFeatureNameAsync(long FormID) {
            return base.Channel.ListFeatureNameAsync(FormID);
        }
        
        public string ListIssueDate() {
            return base.Channel.ListIssueDate();
        }
        
        public System.Threading.Tasks.Task<string> ListIssueDateAsync() {
            return base.Channel.ListIssueDateAsync();
        }
        
        public string AutoIDSelf() {
            return base.Channel.AutoIDSelf();
        }
        
        public System.Threading.Tasks.Task<string> AutoIDSelfAsync() {
            return base.Channel.AutoIDSelfAsync();
        }
        
        public System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl> PastIssueSearch(long clientId, long moduleId, long formId) {
            return base.Channel.PastIssueSearch(clientId, moduleId, formId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HealthCareMvc5.ClientIssueRaiseRef.ClientIssueRaiseDtl>> PastIssueSearchAsync(long clientId, long moduleId, long formId) {
            return base.Channel.PastIssueSearchAsync(clientId, moduleId, formId);
        }
        
        public string FileuploadSer(long id) {
            return base.Channel.FileuploadSer(id);
        }
        
        public System.Threading.Tasks.Task<string> FileuploadSerAsync(long id) {
            return base.Channel.FileuploadSerAsync(id);
        }

        internal object Create(List<ClientIssueRaise> issueDetails, List<FileUpload> fileupload, List<FileUpload> delListobj)
        {
            throw new NotImplementedException();
        }
    }
}
