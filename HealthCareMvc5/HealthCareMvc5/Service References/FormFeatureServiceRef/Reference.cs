//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HealthCareMvc5.FormFeatureServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FormFeatureServiceRef.IFormFeatureServices")]
    public interface IFormFeatureServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/formfeatureser", ReplyAction="http://tempuri.org/IFormFeatureServices/formfeatureserResponse")]
        HealthCareObjects.Client.Feature[] formfeatureser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/formfeatureser", ReplyAction="http://tempuri.org/IFormFeatureServices/formfeatureserResponse")]
        System.Threading.Tasks.Task<HealthCareObjects.Client.Feature[]> formfeatureserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/formfeaturemodser", ReplyAction="http://tempuri.org/IFormFeatureServices/formfeaturemodserResponse")]
        HealthCareObjects.Client.Feature[] formfeaturemodser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/formfeaturemodser", ReplyAction="http://tempuri.org/IFormFeatureServices/formfeaturemodserResponse")]
        System.Threading.Tasks.Task<HealthCareObjects.Client.Feature[]> formfeaturemodserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/formfeatureformser", ReplyAction="http://tempuri.org/IFormFeatureServices/formfeatureformserResponse")]
        HealthCareObjects.Client.Feature[] formfeatureformser(int moduleid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/formfeatureformser", ReplyAction="http://tempuri.org/IFormFeatureServices/formfeatureformserResponse")]
        System.Threading.Tasks.Task<HealthCareObjects.Client.Feature[]> formfeatureformserAsync(int moduleid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/cmbformser", ReplyAction="http://tempuri.org/IFormFeatureServices/cmbformserResponse")]
        HealthCareObjects.Client.Feature[] cmbformser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/cmbformser", ReplyAction="http://tempuri.org/IFormFeatureServices/cmbformserResponse")]
        System.Threading.Tasks.Task<HealthCareObjects.Client.Feature[]> cmbformserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/Createser", ReplyAction="http://tempuri.org/IFormFeatureServices/CreateserResponse")]
        bool Createser(HealthCareObjects.Client.Feature[] objtrans);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/Createser", ReplyAction="http://tempuri.org/IFormFeatureServices/CreateserResponse")]
        System.Threading.Tasks.Task<bool> CreateserAsync(HealthCareObjects.Client.Feature[] objtrans);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/ListService", ReplyAction="http://tempuri.org/IFormFeatureServices/ListServiceResponse")]
        HealthCareObjects.Client.Feature[] ListService(int PageNo, int RowsPerPage, string SearchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/ListService", ReplyAction="http://tempuri.org/IFormFeatureServices/ListServiceResponse")]
        System.Threading.Tasks.Task<HealthCareObjects.Client.Feature[]> ListServiceAsync(int PageNo, int RowsPerPage, string SearchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/Listchildser", ReplyAction="http://tempuri.org/IFormFeatureServices/ListchildserResponse")]
        HealthCareObjects.Client.Feature[] Listchildser(int Autoid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/Listchildser", ReplyAction="http://tempuri.org/IFormFeatureServices/ListchildserResponse")]
        System.Threading.Tasks.Task<HealthCareObjects.Client.Feature[]> ListchildserAsync(int Autoid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/Updateser", ReplyAction="http://tempuri.org/IFormFeatureServices/UpdateserResponse")]
        bool Updateser(HealthCareObjects.Client.Feature[] objtra, HealthCareObjects.Client.Feature[] objformDeleteList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/Updateser", ReplyAction="http://tempuri.org/IFormFeatureServices/UpdateserResponse")]
        System.Threading.Tasks.Task<bool> UpdateserAsync(HealthCareObjects.Client.Feature[] objtra, HealthCareObjects.Client.Feature[] objformDeleteList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/DeleteSer", ReplyAction="http://tempuri.org/IFormFeatureServices/DeleteSerResponse")]
        bool DeleteSer(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/DeleteSer", ReplyAction="http://tempuri.org/IFormFeatureServices/DeleteSerResponse")]
        System.Threading.Tasks.Task<bool> DeleteSerAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/AutoIdSer", ReplyAction="http://tempuri.org/IFormFeatureServices/AutoIdSerResponse")]
        string AutoIdSer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/AutoIdSer", ReplyAction="http://tempuri.org/IFormFeatureServices/AutoIdSerResponse")]
        System.Threading.Tasks.Task<string> AutoIdSerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/DeleteDtlFeat", ReplyAction="http://tempuri.org/IFormFeatureServices/DeleteDtlFeatResponse")]
        bool DeleteDtlFeat(HealthCareObjects.Client.Feature objdelftr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormFeatureServices/DeleteDtlFeat", ReplyAction="http://tempuri.org/IFormFeatureServices/DeleteDtlFeatResponse")]
        System.Threading.Tasks.Task<bool> DeleteDtlFeatAsync(HealthCareObjects.Client.Feature objdelftr);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFormFeatureServicesChannel : HealthCareMvc5.FormFeatureServiceRef.IFormFeatureServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormFeatureServicesClient : System.ServiceModel.ClientBase<HealthCareMvc5.FormFeatureServiceRef.IFormFeatureServices>, HealthCareMvc5.FormFeatureServiceRef.IFormFeatureServices {
        
        public FormFeatureServicesClient() {
        }
        
        public FormFeatureServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FormFeatureServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FormFeatureServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FormFeatureServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HealthCareObjects.Client.Feature[] formfeatureser() {
            return base.Channel.formfeatureser();
        }
        
        public System.Threading.Tasks.Task<HealthCareObjects.Client.Feature[]> formfeatureserAsync() {
            return base.Channel.formfeatureserAsync();
        }
        
        public HealthCareObjects.Client.Feature[] formfeaturemodser() {
            return base.Channel.formfeaturemodser();
        }
        
        public System.Threading.Tasks.Task<HealthCareObjects.Client.Feature[]> formfeaturemodserAsync() {
            return base.Channel.formfeaturemodserAsync();
        }
        
        public HealthCareObjects.Client.Feature[] formfeatureformser(int moduleid) {
            return base.Channel.formfeatureformser(moduleid);
        }
        
        public System.Threading.Tasks.Task<HealthCareObjects.Client.Feature[]> formfeatureformserAsync(int moduleid) {
            return base.Channel.formfeatureformserAsync(moduleid);
        }
        
        public HealthCareObjects.Client.Feature[] cmbformser() {
            return base.Channel.cmbformser();
        }
        
        public System.Threading.Tasks.Task<HealthCareObjects.Client.Feature[]> cmbformserAsync() {
            return base.Channel.cmbformserAsync();
        }
        
        public bool Createser(HealthCareObjects.Client.Feature[] objtrans) {
            return base.Channel.Createser(objtrans);
        }
        
        public System.Threading.Tasks.Task<bool> CreateserAsync(HealthCareObjects.Client.Feature[] objtrans) {
            return base.Channel.CreateserAsync(objtrans);
        }
        
        public HealthCareObjects.Client.Feature[] ListService(int PageNo, int RowsPerPage, string SearchText) {
            return base.Channel.ListService(PageNo, RowsPerPage, SearchText);
        }
        
        public System.Threading.Tasks.Task<HealthCareObjects.Client.Feature[]> ListServiceAsync(int PageNo, int RowsPerPage, string SearchText) {
            return base.Channel.ListServiceAsync(PageNo, RowsPerPage, SearchText);
        }
        
        public HealthCareObjects.Client.Feature[] Listchildser(int Autoid) {
            return base.Channel.Listchildser(Autoid);
        }
        
        public System.Threading.Tasks.Task<HealthCareObjects.Client.Feature[]> ListchildserAsync(int Autoid) {
            return base.Channel.ListchildserAsync(Autoid);
        }
        
        public bool Updateser(HealthCareObjects.Client.Feature[] objtra, HealthCareObjects.Client.Feature[] objformDeleteList) {
            return base.Channel.Updateser(objtra, objformDeleteList);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateserAsync(HealthCareObjects.Client.Feature[] objtra, HealthCareObjects.Client.Feature[] objformDeleteList) {
            return base.Channel.UpdateserAsync(objtra, objformDeleteList);
        }
        
        public bool DeleteSer(long id) {
            return base.Channel.DeleteSer(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSerAsync(long id) {
            return base.Channel.DeleteSerAsync(id);
        }
        
        public string AutoIdSer() {
            return base.Channel.AutoIdSer();
        }
        
        public System.Threading.Tasks.Task<string> AutoIdSerAsync() {
            return base.Channel.AutoIdSerAsync();
        }
        
        public bool DeleteDtlFeat(HealthCareObjects.Client.Feature objdelftr) {
            return base.Channel.DeleteDtlFeat(objdelftr);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteDtlFeatAsync(HealthCareObjects.Client.Feature objdelftr) {
            return base.Channel.DeleteDtlFeatAsync(objdelftr);
        }
    }
}
